paths:
  /api/carts/{cid}:
    get:
      summary: Obtiene un carrito por ID
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
      responses:
        "200":
          description: Carrito encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Carrito no encontrado
        "401":
          description: No autenticado (Token inválido o faltante)
        "403":
          description: No autorizado (El usuario no tiene permisos para esta acción)
  
    put:
      summary: Actualiza un carrito por ID
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCart'
      responses:
        "200":
          description: Carrito actualizado correctamente
        "400":
          description: Error en la solicitud (datos inválidos)
        "401":
          description: No autenticado (Token inválido o faltante)
        "403":
          description: No autorizado (El usuario no tiene permisos para esta acción)
        "404":
          description: Carrito no encontrado

    delete:
      summary: Vacia el carrito por ID
      description: Vacía el carrito, eliminando todos los productos en él, pero no elimina el carrito en sí.
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito a vaciar
          schema:
            type: string
      responses:
        "200":
          description: Carrito vaciado correctamente
        "401":
          description: No autenticado (Token inválido o faltante)
        "403":
          description: No autorizado (El usuario no tiene permisos para esta acción)
        "404":
          description: Carrito no encontrado

  /api/carts/remove/{cid}:
    delete:
      summary: Elimina el carrito pasado por parametro
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito del que se eliminará completamente
          schema:
            type: string
      responses:
        "200":
          description: Carrito eliminado correctamente
        "401":
          description: No autenticado (Token inválido o faltante)
        "403":
          description: No autorizado (El usuario no tiene permisos para esta acción)
        "404":
          description: Carrito no encontrado

  /api/carts/{cid}/product/{pid}:
    put:
      summary: Actualiza un producto en el carrito
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductQuantity'
      responses:
        "200":
          description: Producto actualizado correctamente en el carrito
        "400":
          description: Error en la solicitud (datos inválidos)
        "401":
          description: No autenticado (Token inválido o faltante)
        "403":
          description: No autorizado (El usuario no tiene permisos para esta acción)
        "404":
          description: Carrito o producto no encontrado

  /api/carts/products/{pid}:
    post:
      summary: Agrega un producto al carrito del usuario autenticado
      description: Agrega un producto al carrito del usuario autenticado, sin necesidad de especificar el ID del carrito en la URL.
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a agregar
          schema:
            type: string
      responses:
        "200":
          description: Producto agregado correctamente al carrito del usuario
        "400":
          description: Error en la solicitud (datos inválidos)
        "401":
          description: No autenticado (Token inválido o faltante)
        "403":
          description: No autorizado (El usuario no tiene permisos para esta acción)
        "404":
          description: Producto no encontrado

  /api/carts/{cid}/products/{pid}:
    delete:
      summary: Elimina un producto del carrito
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      responses:
        "200":
          description: Producto eliminado correctamente del carrito
        "400":
          description: Error en la solicitud (datos inválidos)
        "401":
          description: No autenticado (Token inválido o faltante)
        "403":
          description: No autorizado (El usuario no tiene permisos para esta acción)
        "404":
          description: Carrito o producto no encontrado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    updateCart:
      type: array
      items:
        type: object
        properties:
          product:
            type: string
            example: "66db3be9de9382dd6670430f"
          quantity:
            type: integer
            example: 2
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por MongoDB
          example: 60d21b4667d0d8992e610c85
        userId:
          type: string
          description: ID del usuario que posee el carrito
          example: 60d21b4667d0d8992e610c86
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCart'
        total:
          type: number
          description: Monto total del carrito
          example: 3000.00
    ProductInCart:
      type: object
      properties:
        productId:
          type: string
          description: ID del producto
          example: 60d21b4667d0d8992e610c85
        quantity:
          type: integer
          description: Cantidad del producto en el carrito
          example: 2
    ProductQuantity:
      type: object
      properties:
        quantity:
          type: integer
          description: Nueva cantidad del producto en el carrito
          example: 3
